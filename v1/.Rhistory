####### DATA #######
set.seed(2)
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/Fish.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
# Train
train <- df[1:90, ]
# Test
test <- df[91:142, ]
test <- test[-1]
print(system.time({
modele <- fit(Species ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
test[1,]
train[1,]
print(system.time({
modele <- fit(Species ~ . , train)
Mon_Bail <- predict(modele, test, "posterior")
}))
print(system.time({
modele <- naiveBayes(Species ~ . , train, laplace=1)
package <- predict(modele, test, "class")
}))
t2 <- table(package, df[91:142, 1])
t2
print(system.time({
modele <- fit(Species ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
spply(train, class)
pply(train, class)
sapply(train, class)
sapply(test, class)
# Libraries
library(e1071)
library(readxl)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
##################################################### IRIS SPECIES #####################################################
####### DATA #######
set.seed(1)
data(iris)
df <- iris
# Train
train <- sample_n(df, 100, replace=FALSE)
# Test
test <- sample_n(df, 50, replace=FALSE)
Y <- "Species"
test <- select(test, -Y)
####### NBAYES #######
print(system.time({
modele <- fit(Species ~ . , train)
Mon_Bail <- predict(modele, test, "posterior")
}))
####### PACKAGE #######
print(system.time({
modele <- naive_bayes(Species ~ . , train, laplace=1)
package <- predict(modele, test, "prob")
}))
####### COMPARAISON #######
diff <- Mon_Bail$prediction - package
moy <- lapply(diff, mean)
####### PACKAGE #######
print(system.time({
modele <- naiveBayes(Species ~ . , train, laplace=1)
package <- predict(modele, test, "prob")
}))
####### PACKAGE #######
print(system.time({
modele <- naiveBayes(Species ~ . , train, laplace=1)
package <- predict(modele, test, "raw")
}))
####### COMPARAISON #######
diff <- Mon_Bail$prediction - package
moy <- lapply(diff, mean)
moy
####### DATA #######
set.seed(2)
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/Fish.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
# Train
train <- df[1:90, ]
# Test
test <- df[91:142, ]
test <- test[-1]
print(system.time({
modele <- fit(Species ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
set.seed(1)
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/Fish.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
# Train
train <- df[1:90, ]
# Test
test <- df[91:142, ]
test <- test[-1]
####### NBAYES #######
print(system.time({
modele <- fit(Species ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
####### PACKAGE #######
print(system.time({
modele <- naiveBayes(Species ~ . , train, laplace=1)
package <- predict(modele, test, "class")
}))
table(Mon_Bail)
table(Mon_Bail$prediction)
data <- Mon_Bail
data <- Mon_Bail$prediction
data[1]
data[1,1]
data <- as.data.frame(Mon_Bail$prediction)
data[1,1]
data <- as.data.frame(Mon_Bail$prediction[1,])
data
data <- as.data.frame(Mon_Bail$prediction[,1])
data
data[1,1]
data[1,1] <- "white"
names(package)
levels(package)
levels(Mon_Bail$prediction)
names(Mon_Bail$prediction)
as.matrix(Mon_Bail$prediction)
data <- as.matrix(Mon_Bail$prediction)
data[1]
data[1] <- "Whitefish"
as.data.frame(data)
table(as.data.frame(data), f[91:142, 1])
table(as.data.frame(data), df[91:142, 1])
data
table(as.data.frame(data), df[91:142, 1])
table(data, df[91:142, 1])
1+7+1+3+3+5+9+1+1
t2
t2 <- table(package, df[91:142, 1])
t2
1+3+2+3+2+9+2+1+2+1
16*4
(3/64)+(2/81)
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
detach("package:MASS", unload = TRUE)
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
detach("package:MASS", unload = TRUE)
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
detach("package:MASS", unload = TRUE)
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
source('~/Cours/SISE_M2/programmation_R/projet/v1/fit.R')
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heartÂ°num.csv",
header=TRUE, sep=",")
introduce(df)
####### DATA #######
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv",
header=TRUE, sep=",")
introduce(df)
df$sex <- as.factor(df$sex)
sapply(df, class)
nrow(df)
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
df$sex <- as.factor(df$sex)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[2]
test <- test[-2]
print(system.time({
modele <- naiveBayes(Species ~ . , train, laplace=1)
package <- predict(modele, test, "class")
}))
names(df)
####### PACKAGE #######
print(system.time({
modele <- naiveBayes(sex ~ . , train, laplace=1)
package <- predict(modele, test, "class")
}))
package
####### NBAYES #######
print(system.time({
modele <- fit(sex ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
names(df)
test[1,]
train{1,}
train[1,]
test <- df[201:303, ]
test[1,]
test[2,]
test[3,]
df[201,]
df[20,]
introduce(df)
df
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
df$sex <- as.factor(df$sex)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
test
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
df$sex <- as.factor(df$sex)
introduce(df)
# Train
train <- df[1:200, ]
introduce(train)
# Train
train <- df[1:200]
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
df$sex <- as.factor(df$sex)
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[2]
test <- test[-2]
introduce(train)
train
df
train[190,]
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
#df$sex <- as.factor(df$sex)
introduce(df)
train <- df[1:200, ]
introduce(train)
df$sex <- as.factor(df$sex)
# Train
train <- sample_n(df, 200, replace=FALSE)
# Train
train <- sample_n(df, 200, replace=FALSE)
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
##################################################### Heart num sex #####################################################
####### DATA #######
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv",
header=TRUE, sep=",")
introduce(df)
df <- sample_n(df, 142, replace=FALSE)
df$sex <- as.factor(df$sex)
introduce(df)
# Train
train <- sample_n(df, 200, replace=FALSE)
# Test
test <- df[201:303, ]
Y <- test[2]
test <- test[-2]
train[200,]
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
df$sex <- as.factor(df$sex)
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[2]
test <- test[-2]
print(system.time({
modele <- naiveBayes(sex ~ . , train, laplace=1)
package <- predict(modele, test, "class")
}))
print(system.time({
modele <- fit(sex ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
t2 <- table(package, Y)
t2 <- table(package, Y[[1]])
t2
# Matrice de confusion
t1 <- table(Mon_Bail$prediction, Y[[1]])
# Matrice de confusion
t1 <- table(Mon_Bail$prediction[1,], Y[[1]])
Y
Y[[1]]
# Matrice de confusion
t1 <- table(Mon_Bail$prediction[1,], Y[1,)
# Matrice de confusion
t1 <- table(Mon_Bail$prediction[1,], Y[1,])
t1
Mon_Bail$prediction[1,]
Mon_Bail$prediction[,1]
# Matrice de confusion
t1 <- table(Mon_Bail$prediction[,1], Y[1,])
# Matrice de confusion
t1 <- table(Mon_Bail$prediction[,1], Y[,1])
t1
t2
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[2]
test <- test[-2]
####### NBAYES #######
print(system.time({
modele <- fit(sex ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
####### PACKAGE #######
print(system.time({
modele <- naiveBayes(sex ~ . , train, laplace=1)
package <- predict(modele, test, "class")
}))
t1 <- table(Mon_Bail$prediction[,1], Y[,1])
t2 <- table(package, Y[[1]])
t1
package
names(df)
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[1]
test <- test[1]
####### NBAYES #######
print(system.time({
modele <- fit(age ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
test <- test[-1]
print(system.time({
modele <- fit(age ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
names(df)
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
####### DATA #######
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[1]
test <- test[-1]
print(system.time({
modele <- fit(age ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
t1 <- table(Mon_Bail$prediction[,1], Y[,1])
t1
Mon_Bail$prediction[,1]
test <- mdlp(cbind(df$age, df$age))
test
test <- mdlp(cbind(df[201:303, ], df[201:303, ]))
test <- mdlp(cbind(df[201:303, 1], df[201:303, 1]))
test
unique(test$Disc.data)
unique(test$Disc.data[,1])
length(unique(test$Disc.data[,1]))
length(unique(test$Disc.data[,2]))
test
age <- test$Disc.data
train[1] <- age
train[1] <- age[1,]
print(system.time({
modele <- fit(age ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
# Libraries
library(e1071)
library(dplyr)
library(DataExplorer)
# Sources
source("fit.R")
source("predict.R")
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[1]
test <- test[-1]
age_disc <- mdlp(df[201:303, 1], df[201:303, 1])$Disc.data
age_disc[-2]
train[1] <- age_disc[,1]
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[1]
test <- test[-1]
age_disc <- mdlp(cbind(df[201:303, 1], df[201:303, 1]))$Disc.data
age_disc[-2]
train[1] <- age_disc[,1]
train[,1] <- age_disc[,1]
train[,1] <- age_disc[,1]
####### DATA #######
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[1]
test <- test[-1]
age_disc <- mdlp(cbind(df[201:303, 1], df[201:303, 1]))$Disc.data
age_disc[-2]
train[,1] <- age_disc[,1]
train[1,]
train[,1]
age_disc[,1]
train[1] <- age_disc[,1]
df <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/heart_num.csv", header=TRUE, sep=",")
introduce(df)
# Train
train <- df[1:200, ]
# Test
test <- df[201:303, ]
Y <- test[1]
test <- test[-1]
age_disc <- mdlp(cbind(df[1:200, 1], df[1:200, 1]))$Disc.data
age_disc[-2]
train[1] <- age_disc[,1]
####### NBAYES #######
print(system.time({
modele <- fit(age_disc ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
names(train)
####### NBAYES #######
print(system.time({
modele <- fit(age ~ . , train)
Mon_Bail <- predict(modele, test, "class")
}))
# Matrice de confusion
t1 <- table(Mon_Bail$prediction[,1], Y[,1])
t1
install.packages("devtools")
