y
z <- prop.table(table(data[ ,1], data[ ,2]), 1)
cbind(y,z)
z <- prop.table(table(data[ ,1], data[ ,3]), 1)
z
z <- prop.table(table(data[ ,3], data[ ,1]), 1)
z
y <- prop.table(table(data[ ,3], data[ ,2]), 1)
y
cbind(y,z)
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
list_proba
data$disease
colnames(data)
ncol(data)
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/heart.xls", sheet='dataset')
# On definit la variable expliquée (à prédire)
Nom_Variable_A_Predire = "disease"
num_col = 3  #numero de colonne de la variable expliquée
Y <- data[num_col]
ncol(data)
colnames(data)
colnames(data[1])
for (i in 1:ncol(data)) {
if (colnames(data[i]) == Nom_Variable_A_Predire) {
Num_Colonne_A_Predire = i
}
}
print(i)
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
i
list_proba
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
proba <- prop.table(table(data[ ,1], data[ ,Num_Colonne_A_Predire]), 2)
proba
proba <- prop.table(table(data[ ,2], data[ ,Num_Colonne_A_Predire]), 2)
proba
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
list_prov
list_proba
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
list_proba
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
list_proba
proba <- prop.table(table(data[ ,1], data[ ,Num_Colonne_A_Predire]), 2)
proba
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
list_proba
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
list_proba_explicative
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
prop.table(data[, Num_Colonne_A_Predire], 2)
prop.table(data[Num_Colonne_A_Predire])
table(data[Num_Colonne_A_Predire]
)
prop.table(data[Num_Colonne_A_Predire])
prop.table(table(data))
prop.table(table(data[1]))
prop.table(table(data[1]), 2)
prop.table(table(data[1]), 1)
prop.table(table(data[1]))
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
proba_Y
prop.table(table(data[3]))
table(data[3])
182/(182+104)
class(list_proba_explicative)
rbind(list_proba_explicative, proba_Y)
proba_Y
apply(list_proba_all, 1, prod)
# Matrice avec toutes les probabilités conditionnelles + probabilités variables expliquée
list_proba_all <- rbind(list_proba_explicative, proba_Y)
lsit_proba_all
list_proba_all
apply(list_proba_all, 1, prod)
apply(list_proba_all, 2, prod)
list_proba_all
0.89560440*0.10439560*0.21428571*0.21428571*0.52197802*0.22527473*0.03846154*0.63636364
0.89560440*0.10439560*0.21428571*0.52197802*0.22527473*0.03846154*0.63636364
apply(proba_finale, sum)
apply(proba_finale, 2, sum)
# Prédiction grâce au modèle (predict())
proba_finale <- apply(list_proba_all, 1, prod)
apply(proba_finale, 2, sum)
apply(proba_finale, 1, sum)
sum(proba_finale)
proba_finale <- proba_finale / sum(proba_finale)
proba_finale
proba_finale <- apply(list_proba_all, 1, prod)
proba_finale
proba_finale <- apply(list_proba_all, 2, prod)
proba_finale
1
proba_finale <- proba_finale / sum(proba_finale)
proba_finale
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
data$exangdata$exang
data$exang
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
data$chest_pain
data$chest_pain == typ_angina
data$chest_pain == "typ_angina"
data$exang[data$chest_pain == "typ_angina"]
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
table(data[ ,i], data[ ,3])
table(data[ ,1], data[ ,3])
table(data[ ,1], data[ ,3])
table(data[ ,1], data[ ,2])
prop.table(table(data[ ,1], data[ ,2]), 2)
prop.table(table(data[ ,1], data[ ,2]))
prop.table(table(data[ ,1], data[ ,2]), 2)
table(data[ ,1], data[ ,2])
table(data[ ,1], data[ ,2])[1]
table(data[ ,1], data[ ,2])[2]
table(data[ ,1], data[ ,2])[1,2]
table(data[ ,1], data[ ,2])[1,2] == 0
table(data[ ,1], data[ ,2]) == 0
prop.table(table(data[ ,1], data[ ,2]), 2) == 0
sum(prop.table(table(data[ ,1], data[ ,2]), 2) == 0)
prop.table(table(data[ ,1], data[ ,3]), 2) == 0
sum(prop.table(table(data[ ,1], data[ ,3]), 2) == 0)
sum(prop.table(table(data[ ,1], data[ ,2]), 2) == 0)
sum(table(data[ ,1], data[ ,2]) == 0)
table(data[ ,1], data[ ,2]) == 0)
table(data[ ,1], data[ ,2])
table(data[ ,1], data[ ,2]) == 0
sum(table(data[ ,1], data[ ,2]))
sum(table(data[ ,1], data[ ,2]) == 0)
sum(table(data[ ,1], data[ ,3]) ==0 )
sum(table(data[ ,1], data[ ,2]) ==0 )
which.min(table(data[ ,1], data[ ,2]))
table(data[ ,1], data[ ,2])[which.min(table(data[ ,1], data[ ,2]))] +1
table <- table(data[ ,1], data[ ,2])[which.min(table(data[ ,1], data[ ,2]))] +1
table
rm(table)
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
for (i in 1:ncol(data)) {
if (i != Num_Colonne_A_Predire) {
table_freq <- table(data[ ,i], data[ ,Num_Colonne_A_Predire])
}}
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
debugSource('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
table_freq <- table(data[ ,i], data[ ,Num_Colonne_A_Predire])
print(sum(table_freq == 0)
# On definit la variable expliquée (à prédire)
Nom_Variable_A_Predire <- "exang"
# Numero de colonne de la variable expliquée
for (i in 1:ncol(data)) {
if (colnames(data[i]) == Nom_Variable_A_Predire) {
Num_Colonne_A_Predire = i
}
}
# On met toutes les colonnes en Factor
data <- as.data.frame(lapply(data, factor))
# Probabilités des modalités de chaque variable explicative en fonction de la variable expliquée
list_proba_explicative <- c()
for (i in 1:ncol(data)) {
if (i != Num_Colonne_A_Predire) {
# Table de fréquence
table_freq <- table(data[ ,i], data[ ,Num_Colonne_A_Predire])
print(sum(table_freq == 0))
}}
which.min(table_freq)
table_freq
table_freq <- table(data[ ,1], data[ ,2])
table_freq
sum(table_freq)
sum(table_freq == 0)
sum(table_freq == 1)
sum(table_freq == 0)
table_freq == 0
table_freq[table_freq == 0]
zero <- c(0, 2, 0, 3)
which.min(zero)
which.max(zero)
which(zero=0)
which(zero==0)
table_freq == 0
sum(table_freq == 0)
sum(c(FALSE, TRUE, FALSE))
sum(c(TRUE, TRUE, TRUE))
sum(c(FALSE, TRUE, FALSE, FALSE))
sum(c(FALSE, TRUE, FALSE, FALSE, TRUE, TRUE))
sum(zero == 0)
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
zero[which(zero==0)] <- 1000
zero
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
debugSource('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
prop.table(table(data[ ,1], data[ ,2]), 2)
prop.table(table(data[ ,1], data[ ,Num_Colonne_A_Predire]), 2)
prop.table(table(data[ ,2], data[ ,Num_Colonne_A_Predire]), 2)
data$exang
table(data[1], data$exang)
table(data[2], data$exang)
table(data[ ,2], data$exang)
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Census.xls", sheet='adult')
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Census.xlsx", sheet='adult')
data[-1]
data[c(-1, -8)]
data[c(-1,-9)]
data <- data[c(-1, -9)]
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
print(max(proba_finale))
print(max(proba_finale)[1:2])
print(max(proba_finale)[1:3])
print(max(proba_finale),5à
print(max(proba_finale),5)
print(max(proba_finale),2)
print(max(proba_finale))
print(max(proba_finale))
head(sort(proba_finale))
head(sort(proba_finale))[10]
head(sort(proba_finale, descending=TRUE))
head(sort(proba_finale, descending=TRUE), 10)
head(sort(proba_finale, decreasing=TRUE), 10)
head(sort(proba_finale, decreasing=TRUE), 5)
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
install.packages("naivebayes")
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
data <- data[c(-1, -9)]
Y <- as.factor(data[7])
data <- data[c(-1, -9)]
data <- data[c(-1, -9)]
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Census.xlsx", sheet='adult')
# On prend que les variables qualitatives pour ce test
data <- data[c(-1, -9)]
Y <- as.factor(data[7])
Y <- lapply(data[7], factor)
X <- as.matrix(data[-7])
naive_bayes(X, Y)
Y
class(Y)
class(Y[1])
Y <- as.factor(data[, 7])
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
class(data)
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
Y
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
Y
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
0.331518 0.668482
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
source('~/Cours/SISE_M2/programmation_R/projet/package_NBC.R')
res$levels
res$data
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
warnings()
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
$
methods(lm)
methods(fit)
methods("fit")
methods(print)
methods(fit)
methods(lm)
methods(predict)
methods(fit)
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
print(attributes(res))
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
obj
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res$proba_explicative
res$proba_finale
res
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
class(formula(x = ))
help(formula)
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
formula <- as.formula(data$exang ~ .)
formula
formula[1]
formula[0]
formula[2]
formula[3]
formula[4]
attributes(formula)
e <- ~ x + y + z
f <- y ~ x + b
# Return the length of `g`
length(e)
length(f)
# Retrieve the elements at index 1 and 2
e[[1]]
e[[2]]
f[[3]]
formula[[1]]
formula[[2]]
formula[[3]]
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
formula <- as.formula(data$exang ~ data$chest_pain)
formua[[3]]
formula[[3]]
# On charge les données
#library(readxl)
#data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/heart.xls", sheet='dataset')
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Census.xlsx", sheet='adult')
# On prend que les variables qualitatives pour ce test
data <- data[c(-1, -9)]
formula <- as.formula
formula <- as.formula(data$sex ~ .)
formula[[1]]
formula[[2]]
formula[[3]]
formula[[4]]
formula <- as.formula(data$sex ~      .)
formula[[4]]
formula[[3]]
formula[[2]]
formula[[1]]
formula <- as.formula(data$sex ~  data$workclass + data$education + data$relationship)
formula[[1]]
formula[[2]]
formula[[3]]
formula <- as.formula(data$sex ~  data$workclass + data$education +      data$relationship)
formula[[3]]
formula <- as.formula(data$sex ~  data$workclass * data$relationship)
formula[[3]]
model.frame(formula = formula)
res <- model.frame(formula = formula)
res[1]
attributes(res)
formula
model.frame(formula = formula)
formula <- as.formula(data$sex ~  data$workclass + data$relationship)
model.frame(formula = formula)
formula <- as.formula(data$sex ~  .)
model.frame(formula = formula)
model.frame(formula = formula, data=data)
formula <- as.formula(data$sex ~  data$workclass + data$occupation + data$classe)
model.frame(formula = formula, data=data)
formula <- as.formula(data$sex ~  data$workclass * data$occupation)
model.frame(formula = formula, data=data)
formula <- as.formula(data$sex ~  data$workclass :data$occupation)
model.frame(formula = formula, data=data)
formula <- as.formula(data$sex ~ .)
model.frame(formula = formula, data=data)
class(model)
class(model.frame(formula = formula, data=data))
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
prop.table(table(data[1]))
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
levels(data)
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
levels(data)
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res$
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res$proba_explicative
res$table_proba_cond
class(prop.table(table_freq, 2)-
class(prop.table(table_freq, 2))
class(prop.table(data[,1], 2))
class(prop.table(data, 2))
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res$table_proba_cond
prop.table(table(df[ ,2], df[ ,1]))
prop.table(table(data[ ,2], data[ ,1]))
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/heart.xls", sheet='dataset')
prop.table(table(data[ ,2], data[ ,1]))
prop.table(table(data[ ,2], data[ ,1]), 2)
prop.table(table(data[2], data[1]), 2)
table(data)
prop.table(table(data),1)
prop.table(table(data)), 1)
prop.table(table(data, data[,2]), 1)
prop.table(table(data[,1], data[,2]), 1)
prop.table(table(data[1], data[2]), 1)
prop.table(table(data[,1], data[,2]), 1)
df <- as.data.frame(lapply(df, factor))
prop.table(table(df[,1], df[,2]), 1)
data <- as.data.frame(lapply(data, factor))
prop.table(table(data[,1], data[,2]), 1)
class(prop.table(table(data[,1], data[,2]), 1))
table1 <- prop.table(table(data[,1], data[,2]), 1)
table2 <- prop.table(table(data[,1], data[,3]), 1)
rbind(table1, table2)
cbind(table1, table2)
class(cbind)
class(cbind(table1, table2)))
class(cbind(table1, table2))
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res$table_proba_cond
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res$table_proba_cond
as.matrix(prop.table(table(data[,1], data[,2]), 1))
as.matrix(prop.table(table(data[,1], data[,2]), 1), 1)
as.matrix(prop.table(table(data[,1], data[,2]), 1), rownames=rownames(data))
data.frame(prop.table(table(data[,1], data[,2]), 1))
as.data.frame.matrix(prop.table(table(data[,1], data[,2]), 1))
as.data.frame(prop.table(table(data[,1], data[,2]), 1))
y <- prop.table(table(data[,1], data[,2]), 1)
data.frame(y)
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/heart.xls", sheet='dataset')
data.frame(prop.table(table(data[,1], data[,2]), 1))
data <- as.data.frame(lapply(data, factor))
data.frame(prop.table(table(data[,1], data[,2]), 1))
as.matrix(prop.table(table(data[,1], data[,2]), 1), rownames=rownames(data))
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
res$table_proba_cond
as.matrix(prop.table(table(data[,1], data[,2]), 1), rownames=rownames(data))
as.matrix(prop.table(table(df[,1], df[,2]), 1), rownames=rownames(data))
data <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/heart.xls", sheet='dataset')
df <- as.data.frame(lapply(data, factor))
df
as.matrix(prop.table(table(df[,1], df[,2]), 1), rownames=rownames(data))
y <- as.matrix(prop.table(table(df[,1], df[,2]), 1), rownames=rownames(data))
z <- as.matrix(prop.table(table(df[,1], df[,3]), 1), rownames=rownames(data))
z
y + z
c(y, z)
as.matrix(y, z)
as.matrix(c(y, z))
as.matrix(y, c(y, z))
as.matrix(list(y, z))
source('~/Cours/SISE_M2/programmation_R/projet/v0/Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v1/Object_Naive_Bayes.R')
source('~/Cours/SISE_M2/programmation_R/projet/v00/Naive_Bayes.R')
